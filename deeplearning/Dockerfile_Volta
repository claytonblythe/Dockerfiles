FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04

RUN echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list

# This pulls in a whole bunch of crap, python2.7!? how to improve?
RUN apt-get update -qq && apt-get install -y --no-install-recommends \
    at \ 
    build-essential \ 
    cmake \ 
    curl \ 
    imagemagick \ 
    ffmpeg \ 
    git \ 
    ca-certificates \ 
    libnccl2=2.0.5-3+cuda9.0 \
    libnccl-dev=2.0.5-3+cuda9.0 \
    libtiff5-dev \
    libpng-dev \
    libjpeg-dev \
    libjasper-dev \
    libavcodec-dev \
    libavformat-dev \
    libavresample-dev \
    libavutil-dev \
    libswscale-dev \
    libdc1394-22-dev \
    libgtk2.0-dev \
    libv4l-dev \
    libtbb-dev \
    protobuf-compiler \ 
    screenfetch \
    vim \
    wget \ 
    && apt-get clean && rm -rf /var/lib/apt/lists/*

ENV PYTHON_VERSION=3.6
RUN curl -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  && \
     chmod +x ~/miniconda.sh && \
     ~/miniconda.sh -b -p /opt/conda && \     
     rm ~/miniconda.sh && \
#     /opt/conda/bin/conda install conda-build && \
     /opt/conda/bin/conda create -y --name pytorch-py$PYTHON_VERSION python=$PYTHON_VERSION numpy pyyaml scipy ipython mkl&& \
     /opt/conda/bin/conda clean -ya 
ENV PATH /opt/conda/envs/pytorch-py$PYTHON_VERSION/bin:$PATH
RUN conda install --name pytorch-py$PYTHON_VERSION -c soumith magma-cuda90
# This must be done before pip so that requirements.txt is available
WORKDIR /opt/pytorch
COPY . .

RUN git submodule update --init
RUN TORCH_CUDA_ARCH_LIST="5.2 6.0 6.1 7.0+PTX" TORCH_NVCC_FLAGS="-Xfatbin -compress-all" \
    CMAKE_PREFIX_PATH="$(dirname $(which conda))/../" \
    pip install -v .

RUN git clone https://github.com/pytorch/vision.git && cd vision && pip install -v .

RUN git clone --branch 3.2.0 --depth 1 https://github.com/opencv/opencv.git /workspace/opencv && \
    cd /workspace/opencv && \
    mkdir build && \
    cd build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE -DWITH_OPENGL=ON -DWITH_TBB=ON -DWITH_CUDA=OFF \
    -D BUILD_EXAMPLES=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_TESTS=OFF \
    -D CMAKE_INSTALL_PREFIX=$(python -c "import sys; print(sys.prefix)") \
    -D PYTHON3_EXECUTABLE=$(which python3) \
    -D PYTHON_INCLUDE_DIR=$(python -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") \
    -D PYTHON3_PACKAGES_PATH=$(python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())") \
    -D PYTHON3_NUMPY_INCLUDE_DIRS=/opt/conda/envs/pytorch-py35/lib/python3.5/site-packages/numpy/core/include \
    -D PYTHON_LIBRARY=/opt/conda/lib/libpython3.5m.so \
    .. && \
    make -j"$(nproc)"  && \
    make install && \
    ldconfig && \
    cd /workspace && \
    rm -rf /workspace/opencv
    
RUN pip install tensorflow-gpu
ENV DEFAULT_USER claytonblythe
RUN useradd --create-home --home-dir /home/$DEFAULT_USER --shell /bin/bash $DEFAULT_USER && adduser $DEFAULT_USER sudo && chown 700 /home/$DEFAULT_USER
WORKDIR /home/$DEFAULT_USER
USER $DEFAULT_USER
RUN mkdir -p ~/github/ && cd ~/github && git clone --depth=1 http://github.com/claytonblythe/dotfiles.git && git clone http://github.com/claytonblythe/vimrc.git ~/.vim_runtime
RUN cat ~/github/dotfiles/macbook/bashrc >> /home/$DEFAULT_USER/.bashrc && cat ~/github/dotfiles/macbook/bash_profile >> /home/$DEFAULT_USER/.bash_profile && \
    cat ~/github/dotfiles/macbook/aliases >> /home/$DEFAULT_USER/.aliases


